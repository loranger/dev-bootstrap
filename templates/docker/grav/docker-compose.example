version: "3.4"
services:

  nginx:
    container_name: ${APP_PROJECT}-nginx
    image: nginx:stable-alpine
    env_file:
      - .env
    volumes:
      - ./.docker/config/nginx.conf:/etc/nginx/templates/default.conf.template
      - .:/var/www/app
      - ./.docker/logs/nginx:/var/log/nginx
    networks:
      - internal
      - web
    labels:
      - "traefik.http.routers.${APP_PROJECT}.rule=Host(`${APP_URL}`)"
      - "traefik.http.services.${APP_PROJECT}-service.loadbalancer.server.port=80"
    depends_on:
      - php-fpm

  php-fpm:
    container_name: ${APP_PROJECT}-php-fpm
    image: ${APP_PROJECT}-php-fpm
    build:
      context: .
      dockerfile: ./.docker/php-fpm/Dockerfile
    env_file:
      - .env
    networks:
      - internal
    volumes:
      - .:/var/www/app/:rw

# docker-compose run --rm composer require machin/truc
  composer:
    image: ${APP_PROJECT}-php-fpm
    container_name: ${APP_PROJECT}-composer
    volumes:
      - .:/var/www/app
    working_dir: /var/www/app/
    command: -V
    entrypoint: ['/usr/bin/composer']
    networks:
      - internal

# docker-compose run --rm grav install
  grav:
    container_name: ${APP_PROJECT}-grav
    image: ${APP_PROJECT}-grav
    build:
      context: .
      dockerfile: ./.docker/php-cli/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/var/www/app/:rw
    working_dir: /var/www/app/
    entrypoint: ['bin/grav']
    networks:
      - internal

# docker-compose run --rm gpm install admin
  gpm:
    container_name: ${APP_PROJECT}-gpm
    image: ${APP_PROJECT}-gpm
    build:
      context: .
      dockerfile: ./.docker/php-cli/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/var/www/app/:rw
    working_dir: /var/www/app/
    entrypoint: ['bin/gpm']
    networks:
      - internal

# docker-compose run --rm plugin
  plugin:
    container_name: ${APP_PROJECT}-plugin
    image: ${APP_PROJECT}-plugin
    build:
      context: .
      dockerfile: ./.docker/php-cli/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/var/www/app/:rw
    working_dir: /var/www/app/
    entrypoint: ['bin/plugin']
    networks:
      - internal

# custom working_dir may be required
  npm:
    container_name: ${APP_PROJECT}-npm
    image: ${APP_PROJECT}-npm
    build:
      context: .
      dockerfile: ./.docker/node/Dockerfile
    volumes:
      - .:/var/www/app/
    working_dir: /var/www/app/user/themes/quark
    user: "node"
    command: -v
    entrypoint: ['npm']
    networks:
      - internal

networks:
  web:
    external: true
  internal:
    driver: bridge

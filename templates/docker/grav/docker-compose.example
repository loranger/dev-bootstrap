version: "3.4"
services:

  nginx:
    container_name: ${APP_PROJECT}-nginx
    image: nginx:stable-alpine
    env_file:
      - .env
    volumes:
      - ./.docker/config/nginx.conf:/etc/nginx/templates/default.conf.template
      - .:/var/www/app
      - ./.docker/logs/nginx:/var/log/nginx
    labels:
      # Simple HTTP traefik support
      - "traefik.http.routers.${APP_PROJECT}.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.services.${APP_PROJECT}-service.loadbalancer.server.port=80"

      # # TLS support, http>https redirection middleware, //www.domain>//domain redirection middleware
      # - "traefik.http.routers.${APP_PROJECT}.entrypoints=http"
      # - "traefik.http.routers.${APP_PROJECT}.rule=Host(`www.${APP_DOMAIN}`,`${APP_DOMAIN}`)"
      # - "traefik.http.routers.${APP_PROJECT}.middlewares=redirect-without-www@file,redirect-to-https@file"
      # - "traefik.http.routers.${APP_PROJECT}-secure.entrypoints=https"
      # - "traefik.http.routers.${APP_PROJECT}-secure.rule=Host(`www.${APP_DOMAIN}`,`${APP_DOMAIN}`)"
      # - "traefik.http.routers.${APP_PROJECT}-secure.tls=true"
      # - "traefik.http.routers.${APP_PROJECT}-secure.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.${APP_PROJECT}-secure.middlewares=redirect-without-www@file"

      # # Enable https://crazymax.dev/diun/
      # - "diun.enable=true"

      # # Enable https://containrrr.dev/watchtower/
      # - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - php-fpm

  php-fpm:
    container_name: ${APP_PROJECT}-php-fpm
    image: ${APP_PROJECT}-php-fpm
    build:
      context: .
      dockerfile: ./.docker/php-fpm/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/var/www/app/:rw
    user: "${UID:-1000}:${GID:-1000}"

# docker-compose run --rm composer require machin/truc
  composer:
    image: ${APP_PROJECT}-php-fpm
    container_name: ${APP_PROJECT}-composer
    volumes:
      - .:/var/www/app
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /var/www/app/
    command: -V
    entrypoint: ['/usr/bin/composer']

# docker-compose run --rm grav install
  grav:
    container_name: ${APP_PROJECT}-grav
    image: ${APP_PROJECT}-grav
    build:
      context: .
      dockerfile: ./.docker/php-cli/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/var/www/app/:rw
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /var/www/app/
    command: -V
    entrypoint: ['bin/grav']

# docker-compose run --rm gpm install admin
  gpm:
    container_name: ${APP_PROJECT}-gpm
    image: ${APP_PROJECT}-gpm
    build:
      context: .
      dockerfile: ./.docker/php-cli/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/var/www/app/:rw
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /var/www/app/
    command: -V
    entrypoint: ['bin/gpm']

# docker-compose run --rm plugin
  plugin:
    container_name: ${APP_PROJECT}-plugin
    image: ${APP_PROJECT}-plugin
    build:
      context: .
      dockerfile: ./.docker/php-cli/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/var/www/app/:rw
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /var/www/app/
    command: login -V
    entrypoint: ['bin/plugin']

# custom working_dir may be required
  npm:
    container_name: ${APP_PROJECT}-npm
    image: ${APP_PROJECT}-npm
    build:
      context: .
      dockerfile: ./.docker/node/Dockerfile
    volumes:
      - .:/var/www/app/
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /var/www/app/user/themes/quark
    user: "node"
    command: -v
    entrypoint: ['npm']

networks:
  default:
    external:
      name: web

version: '3'

services:

  nginx:
    container_name: ${APP_PROJECT}-nginx
    image: nginx:stable-alpine
    env_file:
      - .env
    volumes:
      - ./.docker/config/nginx.conf:/etc/nginx/templates/default.conf.template
      - .:/var/www/app
      - ./.docker/logs/nginx:/var/log/nginx
    networks:
      - web
    labels:
      - "traefik.http.routers.${APP_PROJECT}.rule=Host(`${APP_URL}`)"
      - "traefik.http.services.${APP_PROJECT}-service.loadbalancer.server.port=80"
    depends_on:
      - php-fpm

  php-fpm:
    container_name: ${APP_PROJECT}-php-fpm
    image: ${APP_PROJECT}-php-fpm
    build:
      context: .
      dockerfile: ./.docker/php-fpm/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/var/www/app/:rw
    user: "${UID:-1000}:${GID:-1000}"
    networks:
      - web

# docker-compose run --rm composer require machin/truc
  composer:
    image: ${APP_PROJECT}-php-fpm
    container_name: ${APP_PROJECT}-composer
    volumes:
      - .:/var/www/app
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /var/www/app/
    command: -V
    entrypoint: ['/usr/bin/composer']
    networks:
      - web

# docker-compose run --rm npm install
  npm:
    image: node:alpine
    container_name: ${APP_PROJECT}-npm
    volumes:
      - .:/var/www/app/
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /var/www/app/
    user: "node"
    command: -v
    entrypoint: ['npm']
    networks:
      - web

# docker-compose run --rm artisan key:generate
  artisan:
    image: ${APP_PROJECT}-php-fpm
    container_name: ${APP_PROJECT}-artisan
    volumes:
      - .:/var/www/app
    user: "${UID:-1000}:${GID:-1000}"
    depends_on:
      - mariadb
    user: "1000:1000"
    command: inspire
    entrypoint: ['/var/www/app/artisan']
    networks:
      - web

  scheduler:
    image: ${APP_PROJECT}-php-fpm
    command: /usr/bin/run-scheduler
    container_name: ${APP_PROJECT}-scheduler
    restart: unless-stopped
    working_dir: /var/www/app/
    depends_on:
      - mariadb
    volumes:
      - .:/var/www/app
    networks:
      - web

  mariadb:
    container_name: ${APP_PROJECT}-mariadb
    image: mariadb:latest
    ports:
      - "${FORWARD_DB_PORT:-3306}:3306"
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - TZ=Europe/Paris
    volumes:
      - ./.docker/database:/var/lib/mysql
    user: "${UID:-1000}:${GID:-1000}"
    networks:
      - web

  # redis:
  #   container_name: ${APP_PROJECT}-redis
  #   image: 'redis:alpine'
  #   ports:
  #     - '${FORWARD_REDIS_PORT:-6379}:6379'
  #   volumes:
  #     - ./.docker/cache:/data
  #   networks:
  #     - web

  # memcached:
  #   container_name: ${APP_PROJECT}-memcached
  #   image: 'memcached:alpine'
  #   ports:
  #     - '${FORWARD_REDIS_PORT:-11211}:11211'
  #   networks:
  #     - web

networks:
  web:
    external: true

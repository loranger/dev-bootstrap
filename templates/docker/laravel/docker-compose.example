version: '3'

services:

  nginx:
    container_name: ${APP_PROJECT}-nginx
    image: nginx:stable-alpine
    env_file:
      - .env
    volumes:
      - ./.docker/config/nginx.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www/app
      - ./.docker/logs/nginx:/var/log/nginx
    networks:
      - internal
      - web
    labels:
      - "traefik.http.routers.${APP_PROJECT}.rule=Host(`${APP_URL}`)"
      - "traefik.http.services.${APP_PROJECT}-service.loadbalancer.server.port=80"
    depends_on:
      - php-fpm

  php-fpm:
    container_name: ${APP_PROJECT}-php-fpm
    image: ${APP_PROJECT}-php-fpm
    build:
      context: .
      dockerfile: ./.docker/php-fpm/Dockerfile
    env_file:
      - .env
    networks:
      - internal
    volumes:
      - .:/var/www/app/:rw

# docker-compose run --rm composer require machin/truc
  composer:
    image: composer:latest
    container_name: ${APP_PROJECT}-composer
    volumes:
      - .:/var/www/app
    working_dir: /var/www/app
    depends_on:
      - php-fpm
    networks:
      - internal

# # docker-compose run --rm npm install
#   npm:
#     image: node:alpine
#     container_name: ${APP_PROJECT}-npm
#     volumes:
#       - .:/var/www/app/
#     working_dir: /var/www/app/
#     user: "node"
#     entrypoint: ['npm', '--no-bin-links']
#     networks:
#       - internal

# docker-compose run --rm artisan key:generate
  artisan:
    build:
      context: .
      dockerfile: ./.docker/php-fpm/Dockerfile
    container_name: ${APP_PROJECT}-artisan
    volumes:
      - .:/var/www/app
    depends_on:
      - mariadb
    entrypoint: ['/var/www/app/artisan']
    networks:
      - internal

  mariadb:
    container_name: ${APP_PROJECT}-mariadb
    image: mariadb:latest
#    ports:
#      - "${FORWARD_DB_PORT:-3306}:3306"
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./.docker/database:/var/lib/mysql
    networks:
      - internal

  # redis:
  #   container_name: ${APP_PROJECT}-redis
  #   image: 'redis:alpine'
  #   ports:
  #     - '${FORWARD_REDIS_PORT:-6379}:6379'
  #   volumes:
  #     - ./.docker/cache:/data
  #   networks:
  #     - internal

  # memcached:
  #   container_name: ${APP_PROJECT}-memcached
  #   image: 'memcached:alpine'
  #   ports:
  #     - '${FORWARD_REDIS_PORT:-11211}:11211'
  #   networks:
  #     - internal

networks:
  web:
    external: true
  internal:
    driver: bridge

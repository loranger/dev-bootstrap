version: '3'

services:

  nginx:
    container_name: ${APP_PROJECT}-nginx
    image: nginx:stable-alpine
    env_file:
      - .env
    volumes:
      - .:/var/www/app/:delegated
      - ./.docker/nginx/templates:/etc/nginx/templates:cached
      # - ./.docker/logs/nginx:/var/log/nginx
    labels:
      # Simple HTTP traefik support
      - "traefik.http.routers.${APP_PROJECT}.rule=Host(`${PS_DOMAIN}`)"
      - "traefik.http.services.${APP_PROJECT}-service.loadbalancer.server.port=80"
      # # TLS support, http>https redirection middleware, //www.domain>//domain redirection middleware
      # - "traefik.http.routers.${APP_PROJECT}.entrypoints=http"
      # - "traefik.http.routers.${APP_PROJECT}.rule=Host(`www.${PS_DOMAIN}`,`${PS_DOMAIN}`)"
      # - "traefik.http.routers.${APP_PROJECT}.middlewares=redirect-without-www@file,redirect-to-https@file"
      # - "traefik.http.routers.${APP_PROJECT}-secure.entrypoints=https"
      # - "traefik.http.routers.${APP_PROJECT}-secure.rule=Host(`www.${PS_DOMAIN}`,`${PS_DOMAIN}`)"
      # - "traefik.http.routers.${APP_PROJECT}-secure.tls=true"
      # - "traefik.http.routers.${APP_PROJECT}-secure.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.${APP_PROJECT}-secure.middlewares=redirect-without-www@file"
      # # Enable https://crazymax.dev/diun/
      # - "diun.enable=true"
      # # Enable https://containrrr.dev/watchtower/
      # - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - php-fpm

  php-fpm: &php-fpm
    container_name: ${APP_PROJECT}-php-fpm
    hostname: ${APP_PROJECT}-php-fpm
    image: ${APP_PROJECT}-php-fpm
    build: .docker/php-fpm/
    env_file:
      - .env
    volumes:
      - .:/var/www/app/:delegated
      - ./.docker/php-fpm/php.ini:/usr/local/etc/php/php.ini:cached
      - ./.docker/php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf:cached
      - ./.docker/php-fpm/prepend.php:/var/share/update_ps_domains.php
    user: "${UID:-1000}:${GID:-1000}"
    labels:
      - "traefik.enable=false"

# docker-compose run --rm composer require machin/truc
  composer:
    <<: *php-fpm
    container_name: ${APP_PROJECT}-composer
    working_dir: /var/www/app/
    command: -V
    entrypoint: ['/usr/bin/composer']

# docker-compose run --rm npm install
  npm: &npm
    image: node:alpine
    container_name: ${APP_PROJECT}-npm
    volumes:
      - .:/var/www/app/:rw
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /var/www/app/
    user: "node"
    command: -v
    entrypoint: ['npm']

  npx:
    <<: *npm
    entrypoint: ['npx']

  mariadb:
    container_name: ${APP_PROJECT}-mariadb
    image: mariadb:latest
    # ports:
    #   - "3306:3306"
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWD}
      - TZ=Europe/Paris
    volumes:
      - ./.docker/database:/var/lib/mysql:delegated
      # - ../path/to/initial_dump.sql:/docker-entrypoint-initdb.d/dump.sql
    labels:
      - "traefik.enable=false"

  # console:
  #   image: ${APP_PROJECT}-php-fpm
  #   container_name: ${APP_PROJECT}-console
  #   env_file:
  #     - .env
  #   volumes_from:
  #     - php-fpm
  #   volumes:
  #     - .:/var/www/app/:delegated
  #     - ./.docker/php-fpm/php.ini:/usr/local/etc/php/php.ini:cached
  #   depends_on:
  #     - ${APP_PROJECT}-mariadb
  #   command: --version
  #   entrypoint: ['/var/www/app/prestashopConsole.phar']

  memcached:
    container_name: ${APP_PROJECT}-memcached
    image: 'memcached:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-11211}:11211'
    profiles:
      - memcached
    labels:
      - "traefik.enable=false"

  maildev:
    image: djfarrelly/maildev
    container_name: ${APP_PROJECT}-maildev
    # ports:
    #   - "1025:25"
    #   - "1080:80"
    profiles:
      - mail
    labels:
      - "traefik.http.routers.maildev-${APP_PROJECT}.rule=Host(`maildev.${PS_DOMAIN}`)"
      - "traefik.http.services.maildev-${APP_PROJECT}-service.loadbalancer.server.port=80"
      - "com.centurylinklabs.watchtower.enable=true"
      - "diun.enable=true"

  adminer:
    container_name: ${APP_PROJECT}-adminer
    image: adminer:latest
    environment:
        ADMINER_DEFAULT_SERVER: ${DB_HOST}
        ADMINER_DESIGN: flat
    # ports:
    #   - 8888:8080
    profiles:
      - adminer
    labels:
      # Simple HTTP traefik support
      - "traefik.http.routers.${APP_PROJECT}-adminer.rule=Host(`adminer.${PS_DOMAIN}`)"
      - "traefik.http.services.${APP_PROJECT}-adminer-service.loadbalancer.server.port=8080"

networks:
  default:
      name: web

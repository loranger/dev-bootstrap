version: '3'

services:

  nginx:
    container_name: ${APP_PROJECT}-nginx
    image: nginx:stable-alpine
    env_file:
      - .env
    volumes:
      - ./.docker/nginx/default.conf:/etc/nginx/templates/default.conf.template
      - ./.docker/logs/nginx:/var/log/nginx
      - .:/var/www/app/
    labels:
      # Simple HTTP traefik support
      - "traefik.http.routers.${APP_PROJECT}.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.services.${APP_PROJECT}-service.loadbalancer.server.port=80"
      # # TLS support, http>https redirection middleware, //www.domain>//domain redirection middleware
      # - "traefik.http.routers.${APP_PROJECT}.entrypoints=http"
      # - "traefik.http.routers.${APP_PROJECT}.rule=Host(`www.${APP_DOMAIN}`,`${APP_DOMAIN}`)"
      # - "traefik.http.routers.${APP_PROJECT}.middlewares=redirect-without-www@file,redirect-to-https@file"
      # - "traefik.http.routers.${APP_PROJECT}-secure.entrypoints=https"
      # - "traefik.http.routers.${APP_PROJECT}-secure.rule=Host(`www.${APP_DOMAIN}`,`${APP_DOMAIN}`)"
      # - "traefik.http.routers.${APP_PROJECT}-secure.tls=true"
      # - "traefik.http.routers.${APP_PROJECT}-secure.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.${APP_PROJECT}-secure.middlewares=redirect-without-www@file"
      # # Enable https://crazymax.dev/diun/
      # - "diun.enable=true"
      # # Enable https://containrrr.dev/watchtower/
      # - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - php-fpm

  php-fpm: &php-fpm
    container_name: ${APP_PROJECT}-php-fpm
    hostname: ${APP_PROJECT}-php-fpm
    image: ${APP_PROJECT}-php-fpm
    build:
      context: .
      dockerfile: .docker/php-fpm/Dockerfile
    env_file:
      - .env
    environment:
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
      - DATABASE_URL=mysql://${DATABASE_USER}:${DATABASE_PASSWORD}@db:3306/${DATABASE_NAME}?serverVersion=${DATABASE_VERSION}
    volumes:
      - .:/var/www/app/
      - ./.docker/php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini:ro
    user: "${UID:-1000}:${GID:-1000}"
    depends_on:
        - database

# docker-compose run --rm composer require machin/truc
  composer:
    <<: *php-fpm
    container_name: ${APP_PROJECT}-composer
    working_dir: /var/www/app/
    command: -V
    entrypoint: ['/usr/bin/composer']

    # docker-compose run --rm console secrets:set --local
  console:
    <<: *php-fpm
    container_name: ${APP_PROJECT}-console
    working_dir: /var/www/app/
    user: "${UID:-1000}:${GID:-1000}"
    entrypoint: ['/var/www/app/bin/console']

  database:
    container_name: ${APP_PROJECT}-db
    image: mariadb:latest
    command: ["--default-authentication-plugin=mysql_native_password"]
    ports:
        - "3306:3306"
    environment:
        - MYSQL_DATABASE=${DATABASE_NAME}
        - MYSQL_USER=${DATABASE_USER}
        - MYSQL_PASSWORD=${DATABASE_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
        - TZ=Europe/Paris
    volumes:
        - ./.docker/database:/var/lib/mysql

# docker-compose run --rm npm install
  npm: &npm
    image: node:alpine
    container_name: ${APP_PROJECT}-npm
    volumes:
      - .:/var/www/app/:rw
    working_dir: /var/www/app/
    user: "node"
    command: -v
    entrypoint: ['npm']

  npx:
    <<: *npm
    entrypoint: ['npx']

  redis:
    container_name: ${APP_PROJECT}-redis
    image: 'redis:alpine'
    # ports:
    #   - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - ./.docker/cache:/data
    profiles:
      - redis
    labels:
      - "traefik.enable=false"

  memcached:
    container_name: ${APP_PROJECT}-memcached
    image: 'memcached:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-11211}:11211'
    profiles:
      - memcached
    labels:
      - "traefik.enable=false"

  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: ${APP_PROJECT}-meilisearch
    # ports:
    #   - "7700:7700"
    volumes:
      - ./.docker/search/data.ms:/data.ms
    profiles:
      - meilisearch
    labels:
      # Simple HTTP traefik support
      - "traefik.http.routers.${APP_PROJECT}-meilisearch.rule=Host(`meilisearch.${APP_DOMAIN}`)"
      - "traefik.http.services.${APP_PROJECT}-meilisearch-service.loadbalancer.server.port=7700"
      - "com.centurylinklabs.watchtower.enable=true"
      - "diun.enable=true"

  maildev:
    image: djfarrelly/maildev
    container_name: ${APP_PROJECT}-maildev
    # ports:
    #   - "1025:25"
    #   - "1080:80"
    profiles:
      - mail
    labels:
      - "traefik.http.routers.maildev-${APP_PROJECT}.rule=Host(`maildev.${APP_DOMAIN}`)"
      - "traefik.http.services.maildev-${APP_PROJECT}-service.loadbalancer.server.port=80"
      - "com.centurylinklabs.watchtower.enable=true"
      - "diun.enable=true"

  adminer:
    container_name: ${APP_PROJECT}-adminer
    image: adminer:latest
    environment:
        ADMINER_DEFAULT_SERVER: ${DB_HOST:-database}
        ADMINER_DESIGN: flat
    # ports:
    #   - 8888:8080
    profiles:
      - adminer
    labels:
      # Simple HTTP traefik support
      - "traefik.http.routers.${APP_PROJECT}-adminer.rule=Host(`adminer.${APP_DOMAIN}`)"
      - "traefik.http.services.${APP_PROJECT}-adminer-service.loadbalancer.server.port=8080"

networks:
  default:
      name: web
      external: true
